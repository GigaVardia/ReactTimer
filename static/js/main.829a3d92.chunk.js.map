{"version":3,"sources":["SessionClock.js","index.js"],"names":["arrowUp","icon","faLongArrowAltUp","arrowDown","faLongArrowAltDown","playIco","faPlay","pauseIco","faPause","resetIco","faSyncAlt","SessionClock","props","secondConvert","count","minutes","Math","floor","seconds","loop","undefined","clickLoop","state","breakLength","sessionLength","clockCount","timerState","currentTimer","color","breakTimeDown","bind","breakTimeUp","sessionTimeDown","sessionTimeUp","startSession","pauseSession","resetSession","finishSound","this","setState","setInterval","clearInterval","clip","document","getElementById","currentTime","play","currentBreakLength","currentSessionLength","className","isPlaying","textColor","Component","ClockSetup","id","onClick","ClockDisplay","style","ClockController","preload","ref","audio","audioBeep","src","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.829a3d92.chunk.js","sourcesContent":["import './style/sessionClock.scss';\nimport {React,Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLongArrowAltDown } from '@fortawesome/free-solid-svg-icons'\nimport { faLongArrowAltUp } from '@fortawesome/free-solid-svg-icons'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\nimport { faPause } from '@fortawesome/free-solid-svg-icons'\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst arrowUp = <FontAwesomeIcon icon={faLongArrowAltUp} />\nconst arrowDown = <FontAwesomeIcon icon={faLongArrowAltDown} />\nconst playIco = <FontAwesomeIcon icon={faPlay} />\nconst pauseIco = <FontAwesomeIcon icon={faPause} />\nconst resetIco = <FontAwesomeIcon icon={faSyncAlt} />\n\nclass SessionClock extends Component {\n  constructor(props) {\n    super(props)\n    this.loop = undefined;\n    this.clickLoop = undefined;\n\n    this.state = {\n      breakLength: 5,\n      sessionLength: 25,\n      clockCount: 25 * 60,\n      timerState: false,\n      currentTimer: 'Session',\n      loop: undefined,\n      color: 'white'\n    }\n\n    this.breakTimeDown   = this.breakTimeDown.bind(this);\n    this.breakTimeUp     = this.breakTimeUp.bind(this);\n    this.sessionTimeDown = this.sessionTimeDown.bind(this);\n    this.sessionTimeUp   = this.sessionTimeUp.bind(this);\n\n    this.startSession    = this.startSession.bind(this);\n    this.pauseSession    = this.pauseSession.bind(this);\n    this.resetSession    = this.resetSession.bind(this);\n\n    this.finishSound     = this.finishSound.bind(this);\n  }\n\n  startSession() {\n    const timerState = this.state.timerState;\n    \n    if (!timerState) {\n      this.setState({\n        timerState: true\n      })\n      \n      this.loop = setInterval(() => {\n        const {clockCount, currentTimer, breakLength, sessionLength} = this.state;\n        if (clockCount === 0) {\n          this.finishSound();\n          this.setState({\n            currentTimer: currentTimer === 'Session' \n              ? 'Break' : 'Session',\n            clockCount: currentTimer === 'Session' \n              ? breakLength * 60 : sessionLength * 60\n          })\n        } else {\n          this.setState({\n            clockCount: clockCount - 1\n          })\n\n          if (clockCount <= 60) {\n            this.setState({\n              color: 'red'\n            })\n          } else {\n            this.setState({\n              color: 'white'\n            })\n          }\n        }\n      }, 1000);\n    }\n  }\n\n  pauseSession() {\n    const playing = this.state.timerState;\n    if (playing) {\n      clearInterval(this.loop);\n      this.setState({\n        timerState: false\n      })\n    }\n  }\n\n  resetSession() {\n    this.setState({\n      breakLength: 5,\n      sessionLength: 25,\n      clockCount: 25 * 60,\n      timerState: false,\n      currentTimer: 'Session',\n      loop: undefined,\n      color: 'white'\n    })\n\n    clearInterval(this.loop);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.loop);\n  }\n\n  finishSound() {\n    const clip = document.getElementById('beep');\n    clip.currentTime = 0;\n    clip.play();\n  }\n\n  secondConvert = (count) => {\n    let minutes = Math.floor(count / 60);\n    let seconds = count % 60;\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n\n    return `${minutes}:${seconds}`;\n  }\n\n  breakTimeDown() {\n    let currentBreakLength = this.state.breakLength;\n\n    if (currentBreakLength !== 0 && !this.state.timerState) {\n      this.setState({\n        breakLength: currentBreakLength - 1\n      })\n    }\n  }\n\n  breakTimeUp() {\n    let currentBreakLength = this.state.breakLength;\n\n    if (currentBreakLength !== 60 && !this.state.timerState) {\n      this.setState({\n        breakLength: currentBreakLength + 1\n      })\n    }\n  }\n\n  sessionTimeDown() {\n    let currentSessionLength = this.state.sessionLength;\n\n    if (currentSessionLength !== 1 && !this.state.timerState) {\n      this.setState({\n        sessionLength: currentSessionLength - 1,\n        clockCount: (currentSessionLength - 1) * 60,\n      })\n    }\n  }\n\n  sessionTimeUp() {\n    let currentSessionLength = this.state.sessionLength;\n\n    if (currentSessionLength !== 60 && !this.state.timerState) {\n      this.setState({\n        sessionLength: currentSessionLength + 1,\n        clockCount: (currentSessionLength + 1) * 60\n      })\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"clock clock-outer\">\n        <div className=\"clock-inner\">\n          <div className=\"clock-inner-appName\">\n            25 + 5 Clock\n          </div>\n\n          <ClockSetup \n            breakLength       = {this.state.breakLength}\n            sessionLength     = {this.state.sessionLength}\n            breakTimeDown     = {this.breakTimeDown}\n            breakTimeUp       = {this.breakTimeUp}\n            sessionTimeDown   = {this.sessionTimeDown}\n            sessionTimeUp     = {this.sessionTimeUp}\n          />\n          <ClockDisplay\n            currentTimer = {this.state.currentTimer}\n            currentTime  = {this.secondConvert(this.state.clockCount)}\n            isPlaying    = {this.timerState}\n            textColor    = {this.state.color}\n          />\n\n          \n\n          <ClockController\n            startSession = {this.startSession}\n            pauseSession = {this.pauseSession}\n            resetSession = {this.resetSession}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass ClockSetup extends Component {\n  render() {\n    return(\n      <div className=\"clock-inner-setup\">\n        <div className=\"clock-inner-setup-break\">\n          <div className=\"clock-inner-setup-break-text\">\n            Break Length\n          </div>\n          <div className=\"clock-inner-setup-break-change\">\n            <div className=\"clock-inner-setup-break-change-timeDown\"\n                id=\"break-decrement\"\n                onClick={this.props.breakTimeDown}\n            >\n              {arrowDown}\n            </div>\n\n            <div className=\"clock-inner-setup-break-change-time\">\n              {this.props.breakLength}\n            </div>\n\n            <div className=\"clock-inner-setup-break-change-timeUp\"\n                id=\"break-increment\"\n                onClick={this.props.breakTimeUp}\n            >\n              {arrowUp}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"clock-inner-setup-session\">\n        <div className=\"clock-inner-setup-session-text\">\n            Session Length\n          </div>\n          <div className=\"clock-inner-setup-session-change\">\n            <div className=\"clock-inner-setup-session-change-timeDown\"\n                id=\"session-decrement\"\n                onClick={this.props.sessionTimeDown}\n            >\n              {arrowDown}\n            </div>\n\n            <div className=\"clock-inner-setup-session-change-time\">\n              {this.props.sessionLength}\n            </div>\n\n            <div className=\"clock-inner-setup-session-change-timeUp\"\n                id=\"session-increment\"\n                onClick={this.props.sessionTimeUp}\n            >\n              {arrowUp}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass ClockDisplay extends Component {\n  render() {\n    return(\n      <div className=\"clock-inner-display\" id=\"display\"\n          style={{color: this.props.textColor}}\n      >\n          <div className=\"clock-inner-display-sessionText\">\n            {this.props.currentTimer}\n          </div>\n\n          <div className=\"clock-inner-display-sessionTime\">\n            {this.props.currentTime}\n          </div>\n      </div>\n    )\n  }\n}\n\nclass ClockController extends Component {\n  render() {\n    return(\n      <div className=\"clock-inner-controller\">\n        <div className=\"clock-inner-controller-wrapper\">\n          <div className=\"clock-inner-controller-wrapper-play\"\n              onClick={this.props.startSession}\n          >\n            {playIco}\n          </div>\n\n          <div className=\"clock-inner-controller-wrapper-pause\"\n              onClick={this.props.pauseSession}\n          >\n          {pauseIco}\n          </div>\n\n          <div className=\"clock-inner-controller-wrapper-stop\"\n              onClick={this.props.resetSession}\n          >\n          {resetIco}\n          </div>\n\n          <audio\n            id=\"beep\"\n            preload=\"auto\"\n            ref={(audio) => {\n              this.audioBeep = audio;\n            }}\n            src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n          />\n        </div>\n\n        <div className=\"clock-inner-author\">\n          Designed and Coded By Giga Vardia\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SessionClock;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport SessionClock from './SessionClock';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SessionClock />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}